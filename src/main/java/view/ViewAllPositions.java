/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.documentsystem.model.Businesspartner;
import com.documentsystem.model.City;
import com.documentsystem.model.Positions;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import logic.Controller;

/**
 *
 * @author Asus
 */
public class ViewAllPositions extends javax.swing.JFrame {

    /**
     * Creates new form ViewAllPositions
     */
    public ViewAllPositions() throws Exception {
        initComponents();
        this.setLocationRelativeTo(null);
        srediFormu();
       
    }
UpdatePositions updateRow = new UpdatePositions();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_positionsList = new javax.swing.JTable();
        jButton_update = new javax.swing.JButton();
        jButton_delete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable_positionsList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable_positionsList);

        jButton_update.setText("Update Position");
        jButton_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_updateActionPerformed(evt);
            }
        });

        jButton_delete.setText("Delete Position");
        jButton_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton_update)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_delete)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_update)
                    .addComponent(jButton_delete))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_deleteActionPerformed
         int red = jTable_positionsList.getSelectedRow();
        if (red == -1) {
            JOptionPane.showMessageDialog(this, "Please select business partner!");
        } else {

            PositionsTableModel model = (PositionsTableModel) jTable_positionsList.getModel();

            String id = model.getValueAt(red, 0).toString();
            String posName = model.getValueAt(red, 1).toString();
           String desc = model.getValueAt(red, 2).toString();
           int posID = Integer.parseInt(id);
           
            try {
                Controller.getInstance().deletePos(posID);

                JOptionPane.showMessageDialog(this, "Position Deleted!");
                model.deleteRow(red);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Position NOOOOT Deleted!!");
            }
        }
    }//GEN-LAST:event_jButton_deleteActionPerformed

    private void jButton_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_updateActionPerformed
         int red = jTable_positionsList.getSelectedRow();
        if (red == -1) {
            JOptionPane.showMessageDialog(this, "Please select position!");
        } else {
            
            
            PositionsTableModel model = (PositionsTableModel) jTable_positionsList.getModel();
            Positions p = model.getPosition(red);
            String id = model.getValueAt(red, 0).toString();
            String posName = model.getValueAt(red, 1).toString();
           String desc = model.getValueAt(red, 2).toString();
            String bs = model.getValueAt(red,3).toString();
            
            updateRow.setVisible(true);
            updateRow.pack();
            updateRow.setDefaultCloseOperation(UpdatePositions.DISPOSE_ON_CLOSE);
            this.dispose();

            
            updateRow.jTextField_posName.setText(posName);
            updateRow.jTextArea_posDescription.setText(desc);
            updateRow.jComboBox_busPartner.setSelectedItem(bs);
            updateRow.jTextField_id.setText(id);
            
        }
    }//GEN-LAST:event_jButton_updateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewAllPositions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewAllPositions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewAllPositions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewAllPositions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ViewAllPositions().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(ViewAllPositions.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_delete;
    private javax.swing.JButton jButton_update;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable_positionsList;
    // End of variables declaration//GEN-END:variables

private void srediFormu() throws Exception{

 List<Positions> pos = Controller.getInstance().getPositionList();
       PositionsTableModel model = new PositionsTableModel(pos);
      jTable_positionsList.setModel(model);
       

}


}
